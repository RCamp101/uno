{"entries":[{"timestamp":1746853280396,"editorVersion":"2.0.56","changes":[{"type":"added","filename":"test.ts","value":"// tests go here; this will not be compiled when this package is used as an extension.\n"},{"type":"added","filename":"main.blocks","value":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables></xml>"},{"type":"added","filename":"main.ts","value":"//10=skip, 11=reverse, 12=+2, 13=blankwild,14=+4wild\nlet discardPile = sprites.create(img`\n    f f f f f f f f f f f f f f f f\n    f f f 1 1 1 1 1 1 1 1 1 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 f f f f f f f f 1 f f f\n    f f f 1 1 1 1 1 1 1 1 1 1 f f f\n    f f f f f f f f f f f f f f f f\n`, SpriteKind.Player)\ndiscardPile.setPosition(80, 60)\nlet player1Img = sprites.create(img`\n    f f f f f f f f f f f f f f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f 2 2 2 2 2 2 2 2 2 2 f f f\n    f f f f f f f f f f f f f f f f\n`, SpriteKind.Player)\nplayer1Img.setPosition(8,60)\nlet player2Img = sprites.create(img`\n    f f f f f f f f f f f f f f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f 8 8 8 8 8 8 8 8 8 8 f f f\n    f f f f f f f f f f f f f f f f\n`, SpriteKind.Player)\nplayer2Img.setPosition(80, 8)\nlet player3Img = sprites.create(img`\n    f f f f f f f f f f f f f f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f 5 5 5 5 5 5 5 5 5 5 f f f\n    f f f f f f f f f f f f f f f f\n`, SpriteKind.Player)\nplayer3Img.setPosition(152, 60)\nlet player4Img = sprites.create(img`\n    f f f f f f f f f f f f f f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f 7 7 7 7 7 7 7 7 7 7 f f f\n    f f f f f f f f f f f f f f f f\n`, SpriteKind.Player)\nplayer4Img.setPosition(80, 112)\nclass UNOCard{\n    myColor:String\n    myNumber: number\n\n    setColor(newColor:String)\n    {\n        this.myColor=newColor\n    }\n    setNumber(newNumber:number){\n        this.myNumber=newNumber\n    }\n\n    toString(){\n        return this.myColor+this.myNumber.toString()\n    }\n}\nlet deckOfCards:UNOCard[]=[]\nlet colors =[\"R\",\"G\",\"B\",\"Y\",\"W\"]\nlet numbers=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14]\nfor (let c = 0; c < colors.length-1; c++) {\n    for (let n = 0; n < numbers.length-2; n++) {\n        let newCard=new UNOCard()\n        newCard.setColor(colors[c])\n        newCard.setNumber(numbers[n])\n        deckOfCards.push(newCard)\n    }\n}\nfor (let c = 0; c < colors.length-1; c++) {\n    for (let n = 1; n < numbers.length - 2; n++) {\n        let newCard = new UNOCard()\n        newCard.setColor(colors[c])\n        newCard.setNumber(numbers[n])\n        deckOfCards.push(newCard)\n    }\n}\n\n\nfor (let n = 0; n < 4; n++) {\n    let newCard = new UNOCard()\n    newCard.setColor(colors[4])\n    newCard.setNumber(numbers[13])\n    deckOfCards.push(newCard)\n    \n}\nfor (let n = 0; n < 4; n++) {\n    let newCard = new UNOCard()\n    newCard.setColor(colors[4])\n    newCard.setNumber(numbers[14])\n    deckOfCards.push(newCard)\n\n}\nconsole.log(deckOfCards)\nfor (let i = 0; i < 10000; i++) {\n    let index1 = randint(0, deckOfCards.length - 1)\n    let index2 = randint(0, deckOfCards.length - 1)\n    let hold = deckOfCards[index1]\n\n    deckOfCards[index1] = deckOfCards[index2]\n    deckOfCards[index2] = hold\n\n    \n}\n\nlet player1Hand: UNOCard[] = []\nlet player2Hand: UNOCard[] = []\nlet player3Hand: UNOCard[] = []\nlet player4Hand: UNOCard[] = []\nlet playedCards: UNOCard[] = []\nfunction drawCard (myHand:UNOCard[]){\n    myHand.push(deckOfCards.pop())\n}\n\nfunction firstDeal (){\n  \n    for (let i = 0; i < 7; i++) {\n        drawCard(player1Hand)\n        drawCard(player2Hand)\n        drawCard(player3Hand)\n        drawCard(player4Hand)\n    }\ndrawCard(playedCards)\n}\n\nfirstDeal()\ngame.onUpdateInterval(50, function() {\n    let x=playedCards.length-1\n    discardPile.sayText(playedCards[x])\n})\n\ngame.onUpdateInterval(500, function () {\n    player1Img.sayText(player1Hand)\n    player2Img.sayText(player2Hand)\n    player3Img.sayText(player3Hand)\n    player4Img.sayText(player4Hand)\n})\n\n\nfunction playCard(currentPlayer:UNOCard[]){\n    let x=game.askForNumber(\"Which Card? 0=1st card and count up\")\n    playedCards.push(currentPlayer[x])\n    currentPlayer[x] = deckOfCards.pop()\n}\n\ncontroller.player1.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\nplayCard(player1Hand)\n})\ncontroller.player2.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\n    playCard(player2Hand)\n})\ncontroller.player3.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\n    playCard(player3Hand)\n})\ncontroller.player4.onButtonEvent(ControllerButton.A, ControllerButtonEvent.Pressed, function () {\n    playCard(player4Hand)\n})\n\n\n\n\nfunction declareWildCard(myCard:UNOCard){\n    let newColor = game.askForString(\"Choose a new color:R,B,Y,G\")\n    while (newColor != \"R\" && newColor != \"G\" && newColor != \"Y\" && newColor != \"Y\") {\n        newColor = game.askForString(\"Choose a new color:R,B,Y,G\")\n    }\n    myCard.setColor(newColor)\n}\n\n\n\n\n\n\n\n\n\n\n\n\n"},{"type":"added","filename":"pxt.json","value":"{\n    \"name\": \"UNO\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\",\n        \"assets.json\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v2.0.53\",\n        \"tag\": \"v2.0.53\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/e974a17f3315341e144667047139204333247d68\",\n        \"target\": \"2.0.53\",\n        \"pxt\": \"11.3.51\"\n    },\n    \"preferredEditor\": \"tsprj\"\n}\n"}]}],"snapshots":[{"timestamp":1746853280395,"editorVersion":"2.0.56","text":{}}],"shares":[],"lastSaveTime":1746853313016}